import{o as e,c as a,a as r}from"./app.74d094fc.js";const t='{"title":"数据类型","description":"","frontmatter":"title Javascript 进阶","headers":[{"level":2,"title":"数据类型","slug":"数据类型"},{"level":3,"title":"== 操作符的强制类型转换规则？","slug":"操作符的强制类型转换规则？"},{"level":3,"title":"intanceof 操作符的实现原理及实现","slug":"intanceof-操作符的实现原理及实现"},{"level":3,"title":"其他值到字符串的转换规则","slug":"其他值到字符串的转换规则"},{"level":3,"title":"其他值到数字值的转换规则","slug":"其他值到数字值的转换规则"},{"level":3,"title":"其他值到布尔类型的值的转换规则","slug":"其他值到布尔类型的值的转换规则"},{"level":3,"title":"|| 和 && 操作符的返回值","slug":"和-操作符的返回值"},{"level":3,"title":"Object.is() 与比较操作符 “===”、“==” 的区别","slug":"object-is-与比较操作符-“-”、“-”-的区别"}],"relativePath":"Regulation/advanced.md","lastUpdated":1642993667268}',i={},h=r('<h2 id="数据类型"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h2><h3 id="操作符的强制类型转换规则？"><a class="header-anchor" href="#操作符的强制类型转换规则？" aria-hidden="true">#</a> == 操作符的强制类型转换规则？</h3><h3 id="intanceof-操作符的实现原理及实现"><a class="header-anchor" href="#intanceof-操作符的实现原理及实现" aria-hidden="true">#</a> intanceof 操作符的实现原理及实现</h3><h3 id="其他值到字符串的转换规则"><a class="header-anchor" href="#其他值到字符串的转换规则" aria-hidden="true">#</a> 其他值到字符串的转换规则</h3><h3 id="其他值到数字值的转换规则"><a class="header-anchor" href="#其他值到数字值的转换规则" aria-hidden="true">#</a> 其他值到数字值的转换规则</h3><h3 id="其他值到布尔类型的值的转换规则"><a class="header-anchor" href="#其他值到布尔类型的值的转换规则" aria-hidden="true">#</a> 其他值到布尔类型的值的转换规则</h3><h3 id="和-操作符的返回值"><a class="header-anchor" href="#和-操作符的返回值" aria-hidden="true">#</a> || 和 &amp;&amp; 操作符的返回值</h3><h3 id="object-is-与比较操作符-“-”、“-”-的区别"><a class="header-anchor" href="#object-is-与比较操作符-“-”、“-”-的区别" aria-hidden="true">#</a> <a href="http://Object.is" target="_blank" rel="noopener noreferrer">Object.is</a>() 与比较操作符 “===”、“==” 的区别</h3>',8);i.render=function(r,t,i,l,d,n){return e(),a("div",null,[h])};export default i;export{t as __pageData};
